{
  "development": {
    "automation": {
      "1": "Manual deployment, no process or automation",
      "2": "Automated builds (CI) + manual deployments with standardized procedures",
      "3": "Automated testing and automated deployments in non-production",
      "4": "Continuous Delivery strategy (only release candidates are tested)",
      "5": "Push-button releases to production (Continuous Deployment and/or Operations)"
    },
    "methodology": {
      "1": "No defined methodology",
      "2": "Defined waterfall approach",
      "3": "Limited agile development on new projects (not including operations)",
      "4": "Agile methodology for Development and Operations teams",
      "5": "Development and Operations working together in cross-functional teams (DevOps)"
    },
    "architecture": {
      "1": "Ad-hoc choice of application platforms and tooling. Limited understanding of contemporary architectural approaches.",
      "2": "Selected vendor technical roadmap. Initial understanding of new architectures and designs",
      "3": "Iterative development of existing applications. Limited legacy strategy and beginnings of new development architectures",
      "4": "Focus on new application platforms & limited legacy platforms. Well defined architecture for new development projects and operating models",
      "5": "Holistic and defined overall development strategy. Good designs and architectures in place and under regular review"
    },
    "strategy": {
      "1": "Ad-hoc, tactical, one-off requirements and poorly understood and communicated strategy",
      "2": "Repeatible requirements gathering approach; traditional system analysis",
      "3": "Minimal Viable Product approach (incremental approach with visible feedbacks)",
      "4": "Exploration of multiple approaches to solve business needs",
      "5": "Business value driven IT innovation. IT working in a collaborative manner with the business."
    },
    "environment": {
      "1": "Traditional programming techniques in a heavily siloed structure",
      "2": "Sporadic agile-adoption with limited cross-team collaboration",
      "3": "Multi-team collaboration through formalised communication channels",
      "4": "Early adoption of cross-functional teams and shared delivery goals",
      "5": "100% DevOps collaborative culture with energised cross-functional teams and constant improvement"
    }
  },
  "operations": {
    "automation": {
      "1": "Core build for operating system and only basic (manual) provisioning",
      "2": "Patch and Release management (OS)",
      "3": "Automated QA Staging process (SOE)",
      "4": "Automated OS builds",
      "5": "Automatically managed and provisioned Infrastructure through self service"
    },
    "methodology": {
      "1": "Hosting/Management only",
      "2": "Defined SLAs and ITIL",
      "3": "Compliance and security auditing",
      "4": "SOE",
      "5": "Full DevOps culture"
    },
    "architecture": {
      "1": "Ad-hoc choice of future platforms",
      "2": "Selected vendor technical roadmap",
      "3": "Focus on maintaining existing infrastructure",
      "4": "Primary focus on new applications",
      "5": "Defined strategy for existing and new architectures"
    },
    "strategy": {
      "1": "Instances of negative business impact",
      "2": "Good functioning service operations; few unscheduled outage but slow to deploy",
      "3": "Project based service offerings; no unscheduled outages and rapid deployment",
      "4": "Self service operations for development and the business",
      "5": "Transparent integration with project I.T."
    },
    "environment": {
      "1": "Standard Unix approach in a heavily siloed structure",
      "2": "Reactive rather than Pro-active Operations teams; Water cooler discussions get more done",
      "3": "Collaboration across siloes just beginning and agile understood; sense of urgency for change established",
      "4": "Collaborative, empowered, connected, smaller, cross-functional teams. <br>Open Source and Inner Source solutions actively encouraged and communities of practice forming. New collaborative way of working established",
      "5": "100% DevOps culture with energised cross-functional teams and constant improvement. Positive change realised with individuals contributing; Open Organisation understood"
    }
  }
}
